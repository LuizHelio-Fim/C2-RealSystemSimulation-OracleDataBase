

/* Apaga as Views */
DROP VIEW LABDATABASE.REL_NOTAS_DETALHADAS;
DROP VIEW LABDATABASE.REL_MEDIA_FINAL_PROFESSOR;
DROP VIEW LABDATABASE.V_ALUNOS_PRINCIPAIS;
DROP VIEW LABDATABASE.V_PROFESSORES_PRINCIPAIS;

/* Apaga as constraints de chave estrangeira (FKs) nomeadas */
ALTER TABLE LABDATABASE.ALUNO DROP CONSTRAINT CURSO_ALUNO_FK;
ALTER TABLE LABDATABASE.MATERIA DROP CONSTRAINT CURSO_MATERIA_FK;
ALTER TABLE LABDATABASE.OFERTA DROP CONSTRAINT PROFESSOR_OFERTA_FK;
ALTER TABLE LABDATABASE.OFERTA DROP CONSTRAINT MATERIA_OFERTA_FK;
ALTER TABLE LABDATABASE.AVALIACAO DROP CONSTRAINT OFERTA_AVALIACAO_FK;
ALTER TABLE LABDATABASE.GRADE_ALUNO DROP CONSTRAINT ALUNO_GRADE_ALUNO_FK;
ALTER TABLE LABDATABASE.GRADE_ALUNO DROP CONSTRAINT OFERTA_GRADE_ALUNO_FK;
ALTER TABLE LABDATABASE.AVALIACAO_ALUNO DROP CONSTRAINT AVALIACAO_AVALIACAO_ALUNO_FK;
ALTER TABLE LABDATABASE.AVALIACAO_ALUNO DROP CONSTRAINT ALUNO_AVALIACAO_ALUNO_FK;

/* Apaga os índices explícitos */
DROP INDEX LABDATABASE.IDX_ALUNO_NOME;
DROP INDEX LABDATABASE.IDX_ALUNO_ID_CURSO;
DROP INDEX LABDATABASE.IDX_PROFESSOR_NOME;
DROP INDEX LABDATABASE.IDX_PROFESSOR_STATUS;
DROP INDEX LABDATABASE.IDX_MATERIA_NOME;
DROP INDEX LABDATABASE.IDX_OFERTA_ANO_SEMESTRE;
DROP INDEX LABDATABASE.IDX_AVALIACAO_TIPO;
DROP INDEX LABDATABASE.IDX_GRADE_ALUNO_STATUS;

/* Apaga as tabelas  */
DROP TABLE LABDATABASE.AVALIACAO_ALUNO;
DROP TABLE LABDATABASE.GRADE_ALUNO;
DROP TABLE LABDATABASE.AVALIACAO;
DROP TABLE LABDATABASE.OFERTA;
DROP TABLE LABDATABASE.ALUNO;
DROP TABLE LABDATABASE.MATERIA;
DROP TABLE LABDATABASE.PROFESSOR;
DROP TABLE LABDATABASE.CURSO;

/* Apaga as sequences */
DROP SEQUENCE LABDATABASE.CURSO_ID_SEQ;
DROP SEQUENCE LABDATABASE.PROFESSOR_ID_PROFESSOR_SEQ;
DROP SEQUENCE LABDATABASE.OFERTA_ID_SEQ;
DROP SEQUENCE LABDATABASE.AVALIACAO_ID_SEQ;


-- 1. Tabela CURSO
CREATE TABLE LABDATABASE.CURSO (
    ID NUMBER(10) NOT NULL GENERATED BY DEFAULT ON NULL AS IDENTITY,
    NOME VARCHAR2(100) UNIQUE NOT NULL,
    CARGA_HORARIA_TOTAL NUMBER(5) NOT NULL,
    CONSTRAINT CURSO_PK PRIMARY KEY (ID)
);

-- 2. Tabela PROFESSOR
CREATE TABLE LABDATABASE.PROFESSOR (
    ID_PROFESSOR NUMBER(10) NOT NULL GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CPF VARCHAR2(14) UNIQUE NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    DATA_NASC DATE NOT NULL,
    TELEFONE VARCHAR2(15),
    EMAIL VARCHAR2(100) UNIQUE NOT NULL,
    STATUS VARCHAR2(50) NOT NULL,
    CONSTRAINT PROFESSOR_PK PRIMARY KEY (ID_PROFESSOR)
);

-- 3. Tabela MATERIA
CREATE TABLE LABDATABASE.MATERIA (
    ID_MATERIA NUMBER(10) NOT NULL,
    ID_CURSO NUMBER(10) NOT NULL,
    PERIODO NUMBER(2) NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    CARGA_HORARIA NUMBER(4) NOT NULL,
    MEDIA_APROVACAO NUMBER(4, 2) NOT NULL,
    CONSTRAINT MATERIA_PK PRIMARY KEY (ID_MATERIA, ID_CURSO)
);

-- 4. Tabela ALUNO
CREATE TABLE LABDATABASE.ALUNO (
    MATRICULA NUMBER(10) NOT NULL,
    CPF VARCHAR2(14) UNIQUE NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    DATA_NASC DATE NOT NULL,
    TELEFONE VARCHAR2(15) NOT NULL,
    EMAIL VARCHAR2(100) UNIQUE NOT NULL,
    PERIODO NUMBER(2) NOT NULL,
    ID_CURSO NUMBER(10) NOT NULL,
    STATUS_CURSO VARCHAR2(50) NOT NULL,
    CONSTRAINT ALUNO_PK PRIMARY KEY (MATRICULA)
);

-- 5. Tabela OFERTA
CREATE TABLE LABDATABASE.OFERTA (
    ID NUMBER(10) NOT NULL GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ANO NUMBER(4) NOT NULL,
    SEMESTRE NUMBER(1) NOT NULL,
    ID_MATERIA NUMBER(10) NOT NULL,
    ID_CURSO NUMBER(10) NOT NULL,
    ID_PROFESSOR NUMBER(10) NOT NULL,
    CONSTRAINT OFERTA_PK PRIMARY KEY (ID)
);

-- 6. Tabela AVALIACAO
CREATE TABLE LABDATABASE.AVALIACAO (
    ID NUMBER(10) NOT NULL GENERATED BY DEFAULT ON NULL AS IDENTITY,
    TIPO VARCHAR2(50) NOT NULL,
    PESO NUMBER(4, 2) NOT NULL,
    DATA DATE NOT NULL,
    ID_OFERTA NUMBER(10) NOT NULL,
    CONSTRAINT AVALIACAO_PK PRIMARY KEY (ID)
);

-- 7. Tabela GRADE_ALUNO
CREATE TABLE LABDATABASE.GRADE_ALUNO (
    ID_ALUNO NUMBER(10) NOT NULL,
    ID_OFERTA NUMBER(10) NOT NULL,
    STATUS VARCHAR2(50) NOT NULL,
    MEDIA_FINAL NUMBER(4, 2) NULL,
    CONSTRAINT GRADE_ALUNO_PK PRIMARY KEY (ID_ALUNO, ID_OFERTA)
);

-- 8. Tabela AVALIACAO_ALUNO
CREATE TABLE LABDATABASE.AVALIACAO_ALUNO (
    ID_AVALIACAO NUMBER(10) NOT NULL,
    ID_ALUNO NUMBER(10) NOT NULL,
    NOTA NUMBER(4, 2) NOT NULL,
    CONSTRAINT AVALIACAO_ALUNO_PK PRIMARY KEY (ID_AVALIACAO, ID_ALUNO)
);


/* Cria as sequences  */
CREATE SEQUENCE LABDATABASE.CURSO_ID_SEQ;
CREATE SEQUENCE LABDATABASE.PROFESSOR_ID_PROFESSOR_SEQ;
CREATE SEQUENCE LABDATABASE.OFERTA_ID_SEQ;
CREATE SEQUENCE LABDATABASE.AVALIACAO_ID_SEQ;


-- Relações de ALUNO
ALTER TABLE LABDATABASE.ALUNO ADD CONSTRAINT CURSO_ALUNO_FK
FOREIGN KEY (ID_CURSO)
REFERENCES LABDATABASE.CURSO (ID)
NOT DEFERRABLE;

-- Relações de MATERIA
ALTER TABLE LABDATABASE.MATERIA ADD CONSTRAINT CURSO_MATERIA_FK
FOREIGN KEY (ID_CURSO)
REFERENCES LABDATABASE.CURSO (ID)
NOT DEFERRABLE;

-- Relações de OFERTA
ALTER TABLE LABDATABASE.OFERTA ADD CONSTRAINT PROFESSOR_OFERTA_FK
FOREIGN KEY (ID_PROFESSOR)
REFERENCES LABDATABASE.PROFESSOR (ID_PROFESSOR)
NOT DEFERRABLE;

ALTER TABLE LABDATABASE.OFERTA ADD CONSTRAINT MATERIA_OFERTA_FK
FOREIGN KEY (ID_MATERIA, ID_CURSO)
REFERENCES LABDATABASE.MATERIA (ID_MATERIA, ID_CURSO)
NOT DEFERRABLE;

-- Relações de AVALIACAO
ALTER TABLE LABDATABASE.AVALIACAO ADD CONSTRAINT OFERTA_AVALIACAO_FK
FOREIGN KEY (ID_OFERTA)
REFERENCES LABDATABASE.OFERTA (ID)
NOT DEFERRABLE;

-- Relações de GRADE_ALUNO
ALTER TABLE LABDATABASE.GRADE_ALUNO ADD CONSTRAINT ALUNO_GRADE_ALUNO_FK
FOREIGN KEY (ID_ALUNO)
REFERENCES LABDATABASE.ALUNO (MATRICULA)
NOT DEFERRABLE;

ALTER TABLE LABDATABASE.GRADE_ALUNO ADD CONSTRAINT OFERTA_GRADE_ALUNO_FK
FOREIGN KEY (ID_OFERTA)
REFERENCES LABDATABASE.OFERTA (ID)
NOT DEFERRABLE;

-- Relações de AVALIACAO_ALUNO
ALTER TABLE LABDATABASE.AVALIACAO_ALUNO ADD CONSTRAINT AVALIACAO_AVALIACAO_ALUNO_FK
FOREIGN KEY (ID_AVALIACAO)
REFERENCES LABDATABASE.AVALIACAO (ID)
NOT DEFERRABLE;

ALTER TABLE LABDATABASE.AVALIACAO_ALUNO ADD CONSTRAINT ALUNO_AVALIACAO_ALUNO_FK
FOREIGN KEY (ID_ALUNO)
REFERENCES LABDATABASE.ALUNO (MATRICULA)
NOT DEFERRABLE;




/* Criação de Índices  */
CREATE INDEX LABDATABASE.IDX_ALUNO_NOME ON LABDATABASE.ALUNO (NOME);
CREATE INDEX LABDATABASE.IDX_ALUNO_ID_CURSO ON LABDATABASE.ALUNO (ID_CURSO);
CREATE INDEX LABDATABASE.IDX_PROFESSOR_NOME ON LABDATABASE.PROFESSOR (NOME);
CREATE INDEX LABDATABASE.IDX_PROFESSOR_STATUS ON LABDATABASE.PROFESSOR (STATUS);
CREATE INDEX LABDATABASE.IDX_MATERIA_NOME ON LABDATABASE.MATERIA (NOME);
CREATE INDEX LABDATABASE.IDX_OFERTA_ANO_SEMESTRE ON LABDATABASE.OFERTA (ANO, SEMESTRE);
CREATE INDEX LABDATABASE.IDX_AVALIACAO_TIPO ON LABDATABASE.AVALIACAO (TIPO);
CREATE INDEX LABDATABASE.IDX_GRADE_ALUNO_STATUS ON LABDATABASE.GRADE_ALUNO (STATUS);

/* Garante acesso total as tabelas */
GRANT ALL ON LABDATABASE.CURSO TO LABDATABASE;
GRANT ALL ON LABDATABASE.PROFESSOR TO LABDATABASE;
GRANT ALL ON LABDATABASE.MATERIA TO LABDATABASE;
GRANT ALL ON LABDATABASE.ALUNO TO LABDATABASE;
GRANT ALL ON LABDATABASE.OFERTA TO LABDATABASE;
GRANT ALL ON LABDATABASE.AVALIACAO TO LABDATABASE;
GRANT ALL ON LABDATABASE.GRADE_ALUNO TO LABDATABASE;
GRANT ALL ON LABDATABASE.AVALIACAO_ALUNO TO LABDATABASE;


ALTER USER LABDATABASE quota unlimited on USERS;


