-- Tipos de dados: VARCHAR2 para texto, NUMBER para inteiros e decimais, DATE para datas.

-- 1. Tabela CURSO
CREATE TABLE CURSO (
    ID NUMBER(10) PRIMARY KEY NOT NULL 
        -- Cláusula para autoincremento no Oracle (12c+).
        GENERATED BY DEFAULT ON NULL AS IDENTITY, 
    NOME VARCHAR2(100) UNIQUE NOT NULL, -- UNIQUE: Garante que não há cursos com o mesmo nome.
    CARGA_HORARIA_TOTAL NUMBER(5) NOT NULL
);

---

-- 2. Tabela PROFESSOR
CREATE TABLE PROFESSOR (
    ID_PROFESSOR NUMBER(10) PRIMARY KEY NOT NULL 
        GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CPF VARCHAR2(14) UNIQUE NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    DATA_NASC DATE NOT NULL,
    TELEFONE VARCHAR2(15), -- Mantido como opcional, mas poderia ser NOT NULL
    EMAIL VARCHAR2(100) UNIQUE NOT NULL,
    STATUS VARCHAR2(50) NOT NULL
);

---

-- 3. Tabela MATERIA (Relacionamento Forte: Uma matéria pertence a um curso)
CREATE TABLE MATERIA (
    ID_MATERIA NUMBER(10) NOT NULL,
    ID_CURSO NUMBER(10) NOT NULL,
    PERIODO NUMBER(2) NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    CARGA_HORARIA NUMBER(4) NOT NULL,
    MEDIA_APROVACAO NUMBER(4, 2) NOT NULL, -- NUMBER(4, 2) para precisão de nota (ex: 7.00)

    PRIMARY KEY (ID_MATERIA, ID_CURSO), -- Chave Primária Composta
    FOREIGN KEY (ID_CURSO) REFERENCES CURSO(ID),
    UNIQUE (ID_CURSO, NOME) -- Nome da matéria só precisa ser único dentro do seu curso
);

---

-- 4. Tabela ALUNO
CREATE TABLE ALUNO (
    MATRICULA NUMBER(10) PRIMARY KEY NOT NULL, -- PK, mas geralmente não autoincremental
    CPF VARCHAR2(14) UNIQUE NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    DATA_NASC DATE NOT NULL,
    TELEFONE VARCHAR2(15) NOT NULL,
    EMAIL VARCHAR2(100) UNIQUE NOT NULL,
    PERIODO NUMBER(2) NOT NULL,
    ID_CURSO NUMBER(10) NOT NULL,
    STATUS_CURSO VARCHAR2(50) NOT NULL,

    FOREIGN KEY (ID_CURSO) REFERENCES CURSO(ID) -- FK para o curso do aluno
);

---

-- 5. Tabela OFERTA (Define quando e por quem uma matéria será lecionada)
CREATE TABLE OFERTA (
    ID NUMBER(10) PRIMARY KEY NOT NULL 
        GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ANO NUMBER(4) NOT NULL,
    SEMESTRE NUMBER(1) NOT NULL,
    ID_MATERIA NUMBER(10) NOT NULL,
    ID_CURSO NUMBER(10) NOT NULL, -- Essencial para completar a FK composta de MATERIA
    ID_PROFESSOR NUMBER(10) NOT NULL,

    FOREIGN KEY (ID_PROFESSOR) REFERENCES PROFESSOR(ID_PROFESSOR),
    -- Referência à Chave Composta (ID_MATERIA, ID_CURSO)
    FOREIGN KEY (ID_MATERIA, ID_CURSO) REFERENCES MATERIA(ID_MATERIA, ID_CURSO),
    -- Restrição UNIQUE para evitar que a mesma matéria-curso-professor seja ofertada no mesmo ano/semestre
    UNIQUE (ID_MATERIA, ID_CURSO, ID_PROFESSOR, ANO, SEMESTRE)
);

---

-- 6. Tabela AVALIACAO (Define as provas, trabalhos, etc., para uma oferta específica)
CREATE TABLE AVALIACAO (
    ID NUMBER(10) PRIMARY KEY NOT NULL 
        GENERATED BY DEFAULT ON NULL AS IDENTITY,
    TIPO VARCHAR2(50) NOT NULL,
    PESO NUMBER(4, 2) NOT NULL, -- O peso da avaliação (ex: 0.30)
    DATA DATE NOT NULL,
    ID_OFERTA NUMBER(10) NOT NULL,

    FOREIGN KEY (ID_OFERTA) REFERENCES OFERTA(ID)
);

---

-- 7. Tabela GRADE_ALUNO (Tabela de Junção N:N: Matrícula do aluno em uma Oferta)
CREATE TABLE GRADE_ALUNO (
    ID_ALUNO NUMBER(10) NOT NULL,
    ID_OFERTA NUMBER(10) NOT NULL,
    STATUS VARCHAR2(50) NOT NULL,
    MEDIA_FINAL NUMBER(4, 2) NULL, -- NULL (pode ser nulo) se a oferta não estiver concluída

    PRIMARY KEY (ID_ALUNO, ID_OFERTA),
    FOREIGN KEY (ID_ALUNO) REFERENCES ALUNO(MATRICULA),
    FOREIGN KEY (ID_OFERTA) REFERENCES OFERTA(ID)
);

---

-- 8. Tabela AVALIACAO_ALUNO (Tabela de Junção N:N: Nota do Aluno em uma Avaliação)
CREATE TABLE AVALIACAO_ALUNO (
    ID_AVALIACAO NUMBER(10) NOT NULL,
    ID_ALUNO NUMBER(10) NOT NULL,
    NOTA NUMBER(4, 2) NOT NULL,

    PRIMARY KEY (ID_AVALIACAO, ID_ALUNO),
    FOREIGN KEY (ID_AVALIACAO) REFERENCES AVALIACAO(ID),
    FOREIGN KEY (ID_ALUNO) REFERENCES ALUNO(MATRICULA)
);
